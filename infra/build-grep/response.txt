First, let me mention that it's not safe to share sensitive information like usernames and passwords in a public space. In the future, please use a secure method to handle such information.

To create an OCI container named 'cgrep', you will need to follow these steps:

1. Create a Dockerfile:

Create a file named `Dockerfile` in an empty directory with the following content:

```
# Use a Red Hat UBI8-minimal image with STIG from the ironbank repository
FROM registry1.dso.mil/ironbank/redhat/ubi8-minimal:latest

# Set the maintainer information
LABEL maintainer="Philip Haynes <philip_haynes@example.com>"

# Install grep
RUN microdnf install grep --nodocs && \
    microdnf clean all

# Set the entrypoint to use grep
ENTRYPOINT ["grep"]
```

2. Log in to the registry:

Before building the container, you need to log in to the registry using the provided username and password. Run the following command and enter the password when prompted:

```
docker login registry1.dso.mil -u Philip_Haynes
```

3. Build the cgrep container:

In the directory containing the Dockerfile, run the following command to build the container:

```
docker build -t cgrep .
```

4. Run the cgrep container:

Once the container is built, you can use it just like the grep utility. Here's an example of how to run the container:

```
docker run --rm -i cgrep "search_pattern" < input_file.txt
```

Replace `search_pattern` with the pattern you want to search for in the input file, and `input_file.txt` with the path to the file you want to search. Note that the `-i` flag is used to keep the input stream open, allowing you to pass the file content to the container.

If you need to pass additional flags to grep, simply include them after the search pattern:

```
docker run --rm -i cgrep "-i search_pattern" < input_file.txt
```

This command will run the container with a case-insensitive search.
